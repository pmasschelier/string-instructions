global iota

section .text
; void *iota(rdi: void s[.n], rsi: size_t n);
iota:
	shr rsi, 5						; Divide n by 32
	jz .exit
	vmovdqa ymm0, [.init_mask]
	vmovdqa ymm1, [.add_mask]
.loop:
	vmovdqa [rdi], ymm0				; Copy the 16 bytes of xmm0 to s
	vpaddb ymm0, ymm0, ymm1
	add rdi, 0x20					; Increment rdi of 16 bytes
	sub rsi, 1						; rdx--
	jnz .loop						;	 jump
.exit:
	ret
align 32
.init_mask:
	db 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F
	db 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F
.add_mask: times 32 db 0x20
